About go-pgsql
==============

go-pgsql is a PostgreSQL client library for the Go programming language.

It partially implements version 3.0 of the PostgreSQL frontend/backend protocol,
so it should work with servers of version 7.4 and later.

Installing go-pgsql
===================

1. Make sure you have a working Go installation, see the installation guide at
   http://golang.org/doc/install.html
2. git clone http://github.com/lxn/go-pgsql.git
3. cd go-pgsql && gomake install

Alternatively you can use goinstall:
goinstall github.com/lxn/go-pgsql

Using go-pgsql
==============

There are some examples in the examples directory which should get you started.

Please open an issue on the bug tracker if you encounter a bug.

Missing Features
================

go-pgsql is currently missing support for some features, including:

- authentication types other than MD5
- SSL encrypted sessions
- some data types like bytea, ...
- canceling commands/queries
- bulk copy
...

go-pgsql is (at least for now) not thread-safe, so for every goroutine
that must talk to the same database, a separate Conn is required.

Connection Info
================

To connect, you must pass a connection string to pgsql.Connect().
Much as with the libpq conninfo parameter, values are optional, and
may be overridden by environment variables at runtime, specifically:

- PGPORT - port number
- PGUSER - user name (defaults to postgres)
- PGHOST - host name/address (defaults to localhost)
- PGDATABASE - name of database (defaults to user name if not specified)


Time/Timestamp resolution
=========================

Because the resolution of time.Time is seconds, fractions of seconds are
silently dropped by *ResultSet.Time and *ResultSet.TimeSeconds.
